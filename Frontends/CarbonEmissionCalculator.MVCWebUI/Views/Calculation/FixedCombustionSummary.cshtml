@model List<CarbonEmissionCalculator.MVCWebUI.Models.FixedCombustionSummaryViewModel>
@{
    ViewData["Title"] = "Sabit Yanma Özet";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="card">
    <div class="card-header bg-white d-flex justify-content-between align-items-center">
        <h5 class="mb-0">Sabit Yanma Emisyon Özeti</h5>
        <a href="/Calculation/FixedCombustion" class="btn btn-sm btn-secondary">
            <i class="fas fa-arrow-left me-1"></i>Geri
        </a>
    </div>
    <div class="card-body">
        <div class="table-responsive text-nowrap">
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Yakıt Türü</th>
                        <th>Tüketim Miktarı (m³)</th>
                        <th>CO2 (kg)</th>
                        <th>CO2 (ton)</th>
                        <th>CH4 (kg)</th>
                        <th>CH4 (ton)</th>
                        <th>N2O (kg)</th>
                        <th>N2O (ton)</th>
                        <th>Toplam CO2e (kg)</th>
                        <th>Toplam CO2e (ton)</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>@item.FuelType</td>
                            <td>@item.ConsumptionAmount.ToString("N2")</td>
                            <td>@item.CO2Emission.ToString("N2")</td>
                            <td>@((item.CO2Emission / 1000).ToString("N3"))</td>
                            <td>@item.CH4Emission.ToString("N2")</td>
                            <td>@((item.CH4Emission / 1000).ToString("N3"))</td>
                            <td>@item.N2OEmission.ToString("N2")</td>
                            <td>@((item.N2OEmission / 1000).ToString("N3"))</td>
                            <td>@item.TotalCO2e.ToString("N2")</td>
                            <td>@((item.TotalCO2e / 1000).ToString("N3"))</td>
                        </tr>
                    }
                </tbody>
                <tfoot>
                    <tr class="table-primary">
                        <td><strong>Toplam</strong></td>
                        <td>@Model.Sum(x => x.ConsumptionAmount).ToString("N2")</td>
                        <td>@Model.Sum(x => x.CO2Emission).ToString("N2")</td>
                        <td>@((Model.Sum(x => x.CO2Emission) / 1000).ToString("N3"))</td>
                        <td>@Model.Sum(x => x.CH4Emission).ToString("N2")</td>
                        <td>@((Model.Sum(x => x.CH4Emission) / 1000).ToString("N3"))</td>
                        <td>@Model.Sum(x => x.N2OEmission).ToString("N2")</td>
                        <td>@((Model.Sum(x => x.N2OEmission) / 1000).ToString("N3"))</td>
                        <td>@Model.Sum(x => x.TotalCO2e).ToString("N2")</td>
                        <td>@((Model.Sum(x => x.TotalCO2e) / 1000).ToString("N3"))</td>
                    </tr>
                </tfoot>
            </table>
        </div>
    </div>
</div>

<!-- Grafikler -->
<div class="row mt-4">
    <!-- Yakıt Tüketimi Dağılımı -->
    <div class="col-md-6 mb-4">
        <div class="card">
            <h5 class="card-header">Yakıt Tüketimi Dağılımı</h5>
            <div class="card-body">
                <canvas id="consumptionChart"></canvas>
            </div>
        </div>
    </div>

    <!-- Emisyon Dağılımı -->
    <div class="col-md-6 mb-4">
        <div class="card">
            <h5 class="card-header">Emisyon Dağılımı</h5>
            <div class="card-body">
                <canvas id="emissionChart"></canvas>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // Grafik verilerini hazırla
        const fuelTypes = @Json.Serialize(Model.Select(x => x.FuelType).ToList());
        const consumptionData = @Json.Serialize(Model.Select(x => x.ConsumptionAmount).ToList());
        const co2Data = @Json.Serialize(Model.Select(x => x.CO2Emission).ToList());
        const ch4Data = @Json.Serialize(Model.Select(x => x.CH4Emission).ToList());
        const n2oData = @Json.Serialize(Model.Select(x => x.N2OEmission).ToList());

        // Yakıt Tüketimi Grafiği
        new Chart(document.getElementById('consumptionChart'), {
            type: 'pie',
            data: {
                labels: fuelTypes,
                datasets: [{
                    data: consumptionData,
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.8)',
                        'rgba(54, 162, 235, 0.8)',
                        'rgba(255, 206, 86, 0.8)',
                        'rgba(75, 192, 192, 0.8)'
                    ],
                    borderColor: [
                        'rgb(255, 99, 132)',
                        'rgb(54, 162, 235)',
                        'rgb(255, 206, 86)',
                        'rgb(75, 192, 192)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'bottom'
                    },
                    title: {
                        display: true,
                        text: 'Yakıt Tüketimi Dağılımı (m³)'
                    }
                }
            }
        });

        // Emisyon Dağılımı Grafiği
        new Chart(document.getElementById('emissionChart'), {
            type: 'pie',
            data: {
                labels: ['CO2', 'CH4', 'N2O'],
                datasets: [{
                    data: [
                        co2Data.reduce((a, b) => a + b, 0),
                        ch4Data.reduce((a, b) => a + b, 0),
                        n2oData.reduce((a, b) => a + b, 0)
                    ],
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.8)',
                        'rgba(54, 162, 235, 0.8)',
                        'rgba(75, 192, 192, 0.8)'
                    ],
                    borderColor: [
                        'rgb(255, 99, 132)',
                        'rgb(54, 162, 235)',
                        'rgb(75, 192, 192)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'bottom'
                    },
                    title: {
                        display: true,
                        text: 'Emisyon Dağılımı (kg)'
                    }
                }
            }
        });
    </script>
} 