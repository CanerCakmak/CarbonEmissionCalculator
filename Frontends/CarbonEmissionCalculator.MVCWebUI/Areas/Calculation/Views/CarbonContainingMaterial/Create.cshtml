@model CarbonEmissionCalculator.MVCWebUI.Models.CarbonContainingMaterialCreateViewModel
@{
    ViewData["Title"] = "Karbon İçerikli Hammadde Prosesi";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .table td input { min-width: 120px; }
    .table td:nth-child(9) input,
    .table td:nth-child(10) input { min-width: 150px; }
</style>
<div class="card">
    <div class="card-header bg-white d-flex justify-content-between align-items-center">
        <h5 class="mb-0">Karbon İçerikli Hammadde Prosesi</h5>
        <a href="/" class="btn btn-sm btn-secondary">
            <i class="fas fa-arrow-left me-1"></i>Geri
        </a>
    </div>
    <div class="card-body">
        <form id="carbonMaterialForm" method="post" asp-area="Calculation" asp-controller="CarbonContainingMaterial" asp-action="Create">
            <div class="row mb-3">
                <div class="col-md-12">
                    <label class="form-label">Firma İsmi</label>
                    <div class="input-group">
                        <input type="text" class="form-control" name="FirmName" value="@Model.FirmName" required />
                    </div>
                </div>
            </div>
            <div class="table-responsive text-nowrap">
                <table class="table table-bordered" id="carbonMaterialTable">
                    <thead>
                        <tr class="text-center bg-light">
                            <th colspan="3">Hammadde</th>
                            <th colspan="3">Son Ürün</th>
                            <th>Hammadde - Son Ürün</th>
                            <th>Dönüşüm Faktörü</th>
                            <th colspan="2">Toplam Emisyon</th>
                            <th></th>
                        </tr>
                        <tr class="text-center bg-light">
                            <th>Faaliyet Verisi (ton)</th>
                            <th>Karbon Oranı (%)</th>
                            <th>Karbon Miktarı (ton)</th>
                            <th>Faaliyet Verisi (ton)</th>
                            <th>Karbon Oranı (%)</th>
                            <th>Karbon Miktarı (ton)</th>
                            <th>Ton C</th>
                            <th>Ton CO₂/Ton C</th>
                            <th>kg CO₂e</th>
                            <th>Ton CO₂e</th>
                            <th>İşlem</th>
                        </tr>
                    </thead>
                    <tbody id="carbonMaterialRows">
                        @if (Model.Rows != null && Model.Rows.Count > 0)
                        {
                            for (int i = 0; i < Model.Rows.Count; i++)
                            {
                                <tr>
                                    <td><input type="number" class="form-control text-end" name="Rows[@i].RawMaterialActivity" step="0.001" min="0" value="@Model.Rows[i].RawMaterialActivity" /></td>
                                    <td><input type="number" class="form-control text-end" name="Rows[@i].RawMaterialCarbon" step="0.01" min="0" max="100" value="@Model.Rows[i].RawMaterialCarbon" /></td>
                                    <td><input type="number" class="form-control text-end" name="Rows[@i].RawMaterialCarbonAmount" readonly value="@Model.Rows[i].RawMaterialCarbonAmount" /></td>
                                    <td><input type="number" class="form-control text-end" name="Rows[@i].FinalProductActivity" step="0.001" min="0" value="@Model.Rows[i].FinalProductActivity" /></td>
                                    <td><input type="number" class="form-control text-end" name="Rows[@i].FinalProductCarbon" step="0.01" min="0" max="100" value="@Model.Rows[i].FinalProductCarbon" /></td>
                                    <td><input type="number" class="form-control text-end" name="Rows[@i].FinalProductCarbonAmount" readonly value="@Model.Rows[i].FinalProductCarbonAmount" /></td>
                                    <td><input type="number" class="form-control text-end" name="Rows[@i].TotalCarbon" readonly value="@Model.Rows[i].TotalCarbon" /></td>
                                    <td><input type="number" class="form-control text-end" name="Rows[@i].ConversionFactor" step="0.001" min="0" value="@Model.Rows[i].ConversionFactor" /></td>
                                    <td><input type="number" class="form-control text-end" name="Rows[@i].TotalEmissionKg" readonly value="@Model.Rows[i].TotalEmissionKg" /></td>
                                    <td><input type="number" class="form-control text-end" name="Rows[@i].TotalEmissionTon" readonly value="@Model.Rows[i].TotalEmissionTon" /></td>
                                    <td><button type="button" class="btn btn-danger btn-sm remove-row">Sil</button></td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
                <button type="button" class="btn btn-outline-primary" id="addRowBtn">+ Satır Ekle</button>
            </div>
            <div class="row mt-4">
                <div class="col">
                    <button type="submit" class="btn btn-success" style="float:right;">Onayla Ve Kaydet</button>
                </div>
            </div>
        </form>
    </div>
</div>
@section Scripts {
<script>
    let rowIdx = @Model.Rows?.Count ?? 0;
    function createRow(idx) {
        return `<tr>
            <td><input type="number" class="form-control text-end" name="Rows[${idx}].RawMaterialActivity" step="0.001" min="0" /></td>
            <td><input type="number" class="form-control text-end" name="Rows[${idx}].RawMaterialCarbon" step="0.01" min="0" max="100" /></td>
            <td><input type="number" class="form-control text-end" name="Rows[${idx}].RawMaterialCarbonAmount" readonly /></td>
            <td><input type="number" class="form-control text-end" name="Rows[${idx}].FinalProductActivity" step="0.001" min="0" /></td>
            <td><input type="number" class="form-control text-end" name="Rows[${idx}].FinalProductCarbon" step="0.01" min="0" max="100" /></td>
            <td><input type="number" class="form-control text-end" name="Rows[${idx}].FinalProductCarbonAmount" readonly /></td>
            <td><input type="number" class="form-control text-end" name="Rows[${idx}].TotalCarbon" readonly /></td>
            <td><input type="number" class="form-control text-end" name="Rows[${idx}].ConversionFactor" step="0.001" min="0" value="3.664" /></td>
            <td><input type="number" class="form-control text-end" name="Rows[${idx}].TotalEmissionKg" readonly /></td>
            <td><input type="number" class="form-control text-end" name="Rows[${idx}].TotalEmissionTon" readonly /></td>
            <td><button type="button" class="btn btn-danger btn-sm remove-row">Sil</button></td>
        </tr>`;
    }
    $(document).on('click', '#addRowBtn', function () {
        $('#carbonMaterialRows').append(createRow(rowIdx));
        rowIdx++;
    });
    $(document).on('click', '.remove-row', function () {
        $(this).closest('tr').remove();
    });
    // Otomatik hesaplama ve readonly alanları doldurma
    $(document).on('input', '#carbonMaterialRows input[type=number]', function () {
        $('#carbonMaterialRows tr').each(function () {
            const row = $(this);
            // Inputları bul
            const rawMaterialActivity = parseFloat(row.find('input[name*="RawMaterialActivity"]').val()) || 0;
            const rawMaterialCarbon = parseFloat(row.find('input[name*="RawMaterialCarbon"]').val()) || 0;
            const finalProductActivity = parseFloat(row.find('input[name*="FinalProductActivity"]').val()) || 0;
            const finalProductCarbon = parseFloat(row.find('input[name*="FinalProductCarbon"]').val()) || 0;
            const conversionFactor = parseFloat(row.find('input[name*="ConversionFactor"]').val()) || 0;

            // Hesaplamalar
            const rawMaterialCarbonAmount = rawMaterialActivity * rawMaterialCarbon / 100;
            const finalProductCarbonAmount = finalProductActivity * finalProductCarbon / 100;
            const totalCarbon = rawMaterialCarbonAmount - finalProductCarbonAmount;
            const totalEmissionTon = totalCarbon * conversionFactor;
            const totalEmissionKg = totalEmissionTon * 1000;

            // Sonuçları yaz
            row.find('input[name*="RawMaterialCarbonAmount"]').val(rawMaterialCarbonAmount.toFixed(3));
            row.find('input[name*="FinalProductCarbonAmount"]').val(finalProductCarbonAmount.toFixed(3));
            row.find('input[name*="TotalCarbon"]').val(totalCarbon.toFixed(3));
            row.find('input[name*="TotalEmissionKg"]').val(totalEmissionKg.toFixed(3));
            row.find('input[name*="TotalEmissionTon"]').val(totalEmissionTon.toFixed(3));
        });
    });
</script>
}